/*
 * Copyright (C) 2016 Loci Controls Inc.
 *
 * This file is subject to the terms and conditions of the GNU Lesser
 * General Public License v2.1. See the file LICENSE in the top level
 * directory for more details.
 */

/**
 * @ingroup     cpu_cortexm_common
 * @{
 *
 * @file        pmp.h
 * @brief       Cortex-M Memory Protection Unit (PMP) Driver Header File
 *
 * @author      Ian Martin <ian@locicontrols.com>
 *
 * @}
 */

#ifndef PMP_H
#define PMP_H

#include <stdbool.h>
#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

void print_pmp_reg(int num);

/**
 * @brief disable the PMP
 *
 * @return 0 on success
 * @return <0 on failure or no PMP present
 */
int pmp_disable(void);

/**
 * @brief enable the PMP
 *
 * @return 0 on success
 * @return <0 on failure or no PMP present
 */
int pmp_enable(void);

/**
 * @brief test if the PMP is enabled
 *
 * @return true if enabled
 * @return false if disabled
 */
bool pmp_enabled(void);

/**
 * @brief configure the base address and attributes for an PMP region
 *
 * @param[in]   region  PMP region to configure (0 <= @p region < PMP_NUM_REGIONS)
 * @param[in]   base    base address in RAM (aligned to the size specified within @p attr)
 * @param[in]   attr    attribute word generated by PMP_ATTR()
 *
 * @return 0 on success
 * @return <0 on failure or no PMP present
 */
int pmp_configure(uint_fast8_t region, uintptr_t base, uint_fast32_t attr);

#ifdef __cplusplus
}
#endif

#endif /* PMP_H */
